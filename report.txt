Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Operations to perform:
  Synchronize unmigrated apps: messages, rest_framework, staticfiles
  Apply all migrations: admin, auth, authtoken, contenttypes, movies, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying authtoken.0001_initial... OK
  Applying authtoken.0002_auto_20160226_1747... OK
  Applying authtoken.0003_tokenproxy... OK
  Applying movies.0001_initial... OK
  Applying movies.0002_alter_review_movie... OK
  Applying movies.0003_alter_movie_premiere... OK
  Applying movies.0004_remove_genre_movie... OK
  Applying movies.0005_genre_movie... OK
  Applying movies.0006_auto_20210818_1818... OK
  Applying movies.0007_rename_start_review_stars... OK
  Applying sessions.0001_initial... OK
System check identified no issues (0 silenced).
test_create_admin_success (accounts.tests.UserModelTest) ... ok
test_create_critic_success (accounts.tests.UserModelTest) ... ok
test_response_admin_create_movie_success (movies.tests.MovieViewTest) ... ERROR
test_status_admin_create_movie_success (movies.tests.MovieViewTest) ... ERROR
test_create_and_login_for_admin_account (test_api.TestAccountView) ... FAIL
test_create_and_login_for_critic_account (test_api.TestAccountView) ... FAIL
test_create_and_login_for_user_account (test_api.TestAccountView) ... FAIL
test_create_user_already_exists (test_api.TestAccountView) ... FAIL
test_login_non_existing_user (test_api.TestAccountView) ... ok
test_missing_login_data (test_api.TestAccountView) ... ok
test_wrong_credentials_do_not_login (test_api.TestAccountView) ... ok
test_admin_cannot_create_review (test_api.TestCriticismReviewView) ... ERROR
test_admin_cannot_update_review (test_api.TestCriticismReviewView) ... ERROR
test_cannot_create_review_with_invalid_stars (test_api.TestCriticismReviewView) ... ERROR
test_create_review_without_movie (test_api.TestCriticismReviewView) ... ERROR
test_critic_can_create_review (test_api.TestCriticismReviewView) ... ERROR
test_critic_can_update_review (test_api.TestCriticismReviewView) ... ERROR
test_critic_cannot_duplicate_review (test_api.TestCriticismReviewView) ... ERROR
test_update_review_from_unexisting_movie (test_api.TestCriticismReviewView) ... ERROR
test_update_review_that_doesnt_exist (test_api.TestCriticismReviewView) ... ERROR
test_user_cannot_create_review (test_api.TestCriticismReviewView) ... ERROR
test_user_cannot_update_review (test_api.TestCriticismReviewView) ... ERROR
test_admin_can_view_all_reviews (test_api.TestListReview) ... ERROR
test_anonymous_cannot_view_reviews (test_api.TestListReview) ... ok
test_critic_can_view_only_own_reviews (test_api.TestListReview) ... ERROR
test_user_cannot_view_reviews (test_api.TestListReview) ... ERROR
test_admin_can_delete_movie (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_anonymous_can_filter_movies (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_anonymous_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_anonymous_cannot_filter_movies_with_the_invalid_movie_id (test_api.TestMovieRetrieveDestroyView) ... ok
test_anonymous_filter_movie_without_critic (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_critic_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_user_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_user_filter_movie_with_critic (test_api.TestMovieRetrieveDestroyView) ... ERROR
test_admin_can_create_movie (test_api.TestMovieView) ... ok
test_anonymous_can_list_movies (test_api.TestMovieView) ... ok
test_anonymous_cannot_create_movie (test_api.TestMovieView) ... ok
test_critic_cannot_create_movie (test_api.TestMovieView) ... ok
test_filter_movies_with_the_filter_request (test_api.TestMovieView) ... FAIL
test_genre_cannot_repeat (test_api.TestMovieView) ... FAIL
test_output_format_data (test_api.TestMovieView) ... ok
test_user_cannot_create_movie (test_api.TestMovieView) ... ok

======================================================================
ERROR: test_response_admin_create_movie_success (movies.tests.MovieViewTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/movies/tests.py", line 34, in test_response_admin_create_movie_success
    token = Token.objects.get(user__username='admin')
  File "/home/joaoribas/kenzie/4q/kmdb/venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/joaoribas/kenzie/4q/kmdb/venv/lib/python3.9/site-packages/django/db/models/query.py", line 435, in get
    raise self.model.DoesNotExist(
rest_framework.authtoken.models.Token.DoesNotExist: Token matching query does not exist.

======================================================================
ERROR: test_status_admin_create_movie_success (movies.tests.MovieViewTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/movies/tests.py", line 12, in test_status_admin_create_movie_success
    token = Token.objects.get(user__username='admin')
  File "/home/joaoribas/kenzie/4q/kmdb/venv/lib/python3.9/site-packages/django/db/models/manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/home/joaoribas/kenzie/4q/kmdb/venv/lib/python3.9/site-packages/django/db/models/query.py", line 435, in get
    raise self.model.DoesNotExist(
rest_framework.authtoken.models.Token.DoesNotExist: Token matching query does not exist.

======================================================================
ERROR: test_admin_cannot_create_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 763, in test_admin_cannot_create_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_admin_cannot_update_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1138, in test_admin_cannot_update_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_cannot_create_review_with_invalid_stars (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 934, in test_cannot_create_review_with_invalid_stars
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_create_review_without_movie (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 745, in test_create_review_without_movie
    token = client.post(
KeyError: 'token'

======================================================================
ERROR: test_critic_can_create_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 815, in test_critic_can_create_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_critic_can_update_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1025, in test_critic_can_update_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_critic_cannot_duplicate_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 870, in test_critic_cannot_duplicate_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_update_review_from_unexisting_movie (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 999, in test_update_review_from_unexisting_movie
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_update_review_that_doesnt_exist (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 968, in test_update_review_that_doesnt_exist
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_user_cannot_create_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 786, in test_user_cannot_create_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_user_cannot_update_review (test_api.TestCriticismReviewView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1084, in test_user_cannot_update_review
    token = client.post("/api/login/", self.admin_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_admin_can_view_all_reviews (test_api.TestListReview)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1403, in test_admin_can_view_all_reviews
    token = client.post("/api/login/", self.admin_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_critic_can_view_only_own_reviews (test_api.TestListReview)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1313, in test_critic_can_view_only_own_reviews
    token = client.post("/api/login/", self.admin_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_user_cannot_view_reviews (test_api.TestListReview)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 1289, in test_user_cannot_view_reviews
    token = client.post("/api/login/", self.user_login_data, format="json").json()[
KeyError: 'token'

======================================================================
ERROR: test_admin_can_delete_movie (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 404, in test_admin_can_delete_movie
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_anonymous_can_filter_movies (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 317, in test_anonymous_can_filter_movies
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_anonymous_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 378, in test_anonymous_cannot_delete_movies
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_anonymous_filter_movie_without_critic (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 433, in test_anonymous_filter_movie_without_critic
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_critic_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 346, in test_critic_cannot_delete_movies
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_user_cannot_delete_movies (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 362, in test_user_cannot_delete_movies
    token = self.client.post(
KeyError: 'token'

======================================================================
ERROR: test_user_filter_movie_with_critic (test_api.TestMovieRetrieveDestroyView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 457, in test_user_filter_movie_with_critic
    token = self.client.post(
KeyError: 'token'

======================================================================
FAIL: test_create_and_login_for_admin_account (test_api.TestAccountView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 590, in test_create_and_login_for_admin_account
    self.assertEqual(
AssertionError: {'password_too_short': 'This password is to[166 chars]ic.'} != {'id': 1, 'username': 'admin', 'is_superuse[64 chars]Doe'}
- {'password_entirely_numeric': 'This password is entirely numeric.',
-  'password_too_common': 'This password is too common.',
-  'password_too_short': 'This password is too short. It must contain at least 8 '
-                        'characters.'}
+ {'first_name': 'John',
+  'id': 1,
+  'is_staff': True,
+  'is_superuser': True,
+  'last_name': 'Doe',
+  'username': 'admin'}

======================================================================
FAIL: test_create_and_login_for_critic_account (test_api.TestAccountView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 565, in test_create_and_login_for_critic_account
    self.assertEqual(
AssertionError: {'password_too_short': 'This password is to[166 chars]ic.'} != {'id': 1, 'username': 'critic', 'is_superus[66 chars]Doe'}
- {'password_entirely_numeric': 'This password is entirely numeric.',
-  'password_too_common': 'This password is too common.',
-  'password_too_short': 'This password is too short. It must contain at least 8 '
-                        'characters.'}
+ {'first_name': 'John',
+  'id': 1,
+  'is_staff': True,
+  'is_superuser': False,
+  'last_name': 'Doe',
+  'username': 'critic'}

======================================================================
FAIL: test_create_and_login_for_user_account (test_api.TestAccountView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 540, in test_create_and_login_for_user_account
    self.assertEqual(
AssertionError: {'password_too_short': 'This password is to[166 chars]ic.'} != {'id': 1, 'username': 'user', 'is_superuser[65 chars]Doe'}
- {'password_entirely_numeric': 'This password is entirely numeric.',
-  'password_too_common': 'This password is too common.',
-  'password_too_short': 'This password is too short. It must contain at least 8 '
-                        'characters.'}
+ {'first_name': 'John',
+  'id': 1,
+  'is_staff': False,
+  'is_superuser': False,
+  'last_name': 'Doe',
+  'username': 'user'}

======================================================================
FAIL: test_create_user_already_exists (test_api.TestAccountView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 618, in test_create_user_already_exists
    self.assertEqual(
AssertionError: {'password_too_short': 'This password is to[166 chars]ic.'} != {'username': ['A user with that username already exists.']}
+ {'username': ['A user with that username already exists.']}
- {'password_entirely_numeric': 'This password is entirely numeric.',
-  'password_too_common': 'This password is too common.',
-  'password_too_short': 'This password is too short. It must contain at least 8 '
-                        'characters.'}

======================================================================
FAIL: test_filter_movies_with_the_filter_request (test_api.TestMovieView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 216, in test_filter_movies_with_the_filter_request
    self.assertEqual(len(filter_movies.json()), 2)
AssertionError: 3 != 2

======================================================================
FAIL: test_genre_cannot_repeat (test_api.TestMovieView)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/joaoribas/kenzie/4q/kmdb/test_api.py", line 179, in test_genre_cannot_repeat
    self.assertEqual(movie_1["genres"][1]["id"],
AssertionError: 2 != 3

----------------------------------------------------------------------
Ran 42 tests in 3.020s

FAILED (failures=6, errors=23)
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
